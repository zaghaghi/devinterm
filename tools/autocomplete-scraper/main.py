import json
from dataclasses import asdict, dataclass

from awscli.completer import Completer


@dataclass
class Node:
    name: str
    commands: list[str]
    args: list[str]


def build_nodes(completer: Completer, prefix: str) -> list[dict[str]]:
    commands = completer.complete(prefix)
    args = completer.complete(prefix + " --")
    if prefix != "aws":
        args = list(set(args) - set(f"--{opt}" for opt in completer.main_options))
    nodes = [asdict(Node(name=prefix, commands=commands, args=args))]
    for command in commands:
        nodes += build_nodes(completer, f"{prefix} {command}")
    return nodes


def main():
    completer = Completer()
    nodes = build_nodes(completer, "aws")
    nodes_map = {node["name"]: node for node in nodes}
    with open("aws.py", "w") as of:
        of.write("# --- AUTOGENERATED WITH AUTOCOMPLETE-SCRAPER TOOL ---\n")
        of.write("import json\n\n")
        of.write("AWS_CLI_COMPLETER=json.loads('")
        json.dump(nodes_map, of)
        of.write("')")


if __name__ == "__main__":
    main()
